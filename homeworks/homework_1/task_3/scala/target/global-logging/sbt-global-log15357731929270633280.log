[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\alexa\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\alexa\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 11.0.12)
[debug]       Load.loadUnit: plugins took 789.6367ms
[debug]       Load.loadUnit: defsScala took 1.2815ms
[debug] [Loading] Scanning directory C:\Users\alexa\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\alexa\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 175.1567 ms
[debug]           Load.resolveProject(global-plugins) took 361.1267ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\alexa\.sbt\1.0\plugins, plugins: List(<none>))) took 691.6858ms
[debug] [Loading] Done in C:\Users\alexa\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 813.0055ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.9456ms
[debug]     Load.loadUnit(file:/C:/Users/alexa/.sbt/1.0/plugins/, ...) took 1652.3059ms
[debug]   Load.apply: load took 3111.2527ms
[debug]   Load.apply: resolveProjects took 34.5095ms
[debug]   Load.apply: finalTransforms took 511.8409ms
[debug]   Load.apply: config.delegates took 37.7385ms
[debug]   Load.apply: Def.make(settings)... took 2737.3984ms
[debug]   Load.apply: structureIndex took 557.4239ms
[debug]   Load.apply: mkStreams took 4.5308ms
[info] loading global plugins from C:\Users\alexa\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 64295.0342ms
[debug]           Load.loadUnit: plugins took 326.6842ms
[debug]           Load.loadUnit: defsScala took 0.0172ms
[debug] [Loading] Scanning directory C:\Users\alexa\OneDrive\Рабочий стол\Универ\3 курс\scala\project
[debug]             Load.loadUnit: mkEval took 250.1386ms
